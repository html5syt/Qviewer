name: Web Build + Deployment to Netlify

on:
  # Runs on push to any of the below branches
  push:
    branches:
      - main

  # Runs on pull request events that target one of the below branches
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab of the repository
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  # https://flet.dev/docs/publish#versioning
#   BUILD_NUMBER: 1
#   BUILD_VERSION: 1.0.0

  # Python version to use
  PYTHON_VERSION: 3.12.8

  # flet-cli version to install for `flet build`
  # FLET_CLI_VERSION: 0.27.5

  # Ensures Python uses UTF-8 encoding by default
  PYTHONUTF8: 1

  # Disables rich text formatting in Flet CLI output
  FLET_CLI_NO_RICH_OUTPUT: 1

  # Disables progress bars when using UV
  UV_NO_PROGRESS: 1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install flet-cli LATEST version
      run: |
        python -m pip install --upgrade pip
        pip install flet-cli

    - name: Flet Build Web
      run: |
        echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}, USER: ${GITHUB_REPOSITORY%/*}, PROJECT_BASE_URL: ${GITHUB_REPOSITORY#*/}"
        flet build web --route-url-strategy hash

    - name: Upload Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        name: web-build-artifact  # the name of the artifact
        path: build/web

    - name: Deploy to netlify
      uses: netlify/actions/cli@master
      with:
        args: deploy --dir=build/web --prod
      env:
        NETLIFY_SITE_ID: ${{ secrets.DEV_NETLIFY_SITE_ID }}
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}